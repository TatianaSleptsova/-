import tkinter as tk
from tkinter import ttk
import sqlite3

def login():
    # реализация проверки логина и пароля из базы данных
    pass

def load_image():
    # реализация загрузки изображения
    pass

def predict():
  # Создаем сверточную нейронную сеть
model = models.Sequential()
model.add(layers.Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)))
model.add(layers.MaxPooling2D((2, 2)))
model.add(layers.Conv2D(64, (3, 3), activation='relu'))
model.add(layers.MaxPooling2D((2, 2)))
model.add(layers.Conv2D(64, (3, 3), activation='relu'))

# Добавляем полносвязные слои для классификации
model.add(layers.Flatten())
model.add(layers.Dense(64, activation='relu'))
model.add(layers.Dense(2, activation='softmax')) # 2 - количество классов (заболевание / нет заболевания)

# Компилируем модель
model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

# Обучаем модель на данных
model.fit(train_images, train_labels, epochs=10)

# Оцениваем точность модели на тестовых данных
test_loss, test_acc = model.evaluate(test_images, test_labels)
print('Точность модели:', test_acc)
    pass

def logout():
    # реализация выхода из учетной записи
    pass

# создание главного окна
root = tk.Tk()
root.title("Моё десктопное приложение")

# вкладки
tab_control = ttk.Notebook(root)

# вкладка 1
tab1 = ttk.Frame(tab_control)
tab_control.add(tab1, text='Первая вкладка')

# поле для ввода ФИО
fio_entry = ttk.Entry(tab1)
fio_entry.pack()

# кнопка "Загрузить изображение"
load_button = ttk.Button(tab1, text="Загрузить изображение", command=load_image)
load_button.pack()

# канва для изображения
canvas = tk.Canvas(tab1, width=300, height=300)
canvas.pack()

# кнопка "Прогнозировать"
predict_button = ttk.Button(tab1, text="Прогнозировать", command=predict)
predict_button.pack()

# вкладка 2
tab2 = ttk.Frame(tab_control)
tab_control.add(tab2, text='Вторая вкладка')

# таблица с историей
tree = ttk.Treeview(tab2)
tree["columns"] = ("ФИО", "Результат", "Дата исследования")
tree.heading("#0", text="", anchor="w")
tree.heading("ФИО", text="ФИО")
tree.heading("Результат", text="Результат")
tree.heading("Дата исследования", text="Дата")
tree.pack()

# кнопка "Выйти из учетной записи"
logout_button = ttk.Button(root, text="Выйти из учетной записи", command=logout)
logout_button.pack()

tab_control.pack(expand=1, fill="both")

except ValueError as e:
print(f"Ошибка ввода данных: {e}")

root.mainloop()
